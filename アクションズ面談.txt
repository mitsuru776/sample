2.本質を見極め、自分の頭で考える

【今週を振り返ってどんな行動をしたか】

プログラム設計書が少ない中で作業を行う上で重要な本質の部分は「仕様の共通認識」

＜仕様の共通認識＞
仕様の共通認識であると考えクライアント会社との認識の齟齬がないか確認しながら実装を進めました。


【何か問題や難題があったか。また、その具体的な内容や、どう考えてどういう答えに行き着いたか】

＜仕様に詳しいメンバーが少ない＞

初期の開発者がいない状態での開発メンバー構成の為、チーム内で解決できる部分が多くはなかったことが課題

＜設計書の記載内容がプログラムよりではない＞

クライアント側の設計書が画面イメージ等がメインで作成されており、シーケンス図等のプログラム面での仕様の記載が少ないため、

上記事項を解決するために

プログラム面の仕様に関して疑問点に関しては、資料を用意して意図が伝わりやすいよう工夫をして質問するなどを行い認識の齟齬がないよう注意して実装を進めました。




【本質を見誤った事柄、またはそうならないように気をつけている事】

クライアント側の設計書が画面イメージ等がメインで作成されており、シーケンス図等のプログラム面での仕様の記載が少ないため、
プログラム面の仕様に関して疑問点に関しては、資料を用意して意図が伝わりやすいよう工夫をして質問するなどを行い認識の齟齬がないよう注意して実装を進めました。


【その結果どうだったか、何を感じたか】


開発の初期は認識の齟齬が多く発生しておりましたが、徐々にお互いの仕様の共通理解が深まったことで認識の齟齬が少なくなり、開発が効率的に行えるようになった。

仕様が未把握であった初期のころに比べ、クライアント開発会社からの問い合わせが減った。